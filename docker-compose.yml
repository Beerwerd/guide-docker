version: '3.1'

services:
  server:
    container_name: docker-server
    restart: always
    build:
      context: server
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - ${PORT}:${PORT}
    networks:
      - webnet
    depends_on:
      - postgres

  postgres:
    container_name: ${POSTGRES_HOST}
    restart: unless-stopped
    image: 'postgres:14-alpine'
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - webnet

  minio:
    container_name: ${MINIO_HOST}
    restart: unless-stopped
    image: minio/minio
    volumes:
      - ./minio/data:/data
    env_file:
      - .env
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_BROWSER_PORT}:${MINIO_BROWSER_PORT}"
    command: server /data --console-address :${MINIO_BROWSER_PORT}

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:$MINIO_PORT $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb myminio/$MINIO_BUCKET;
      /usr/bin/mc anonymous set public myminio/$MINIO_BUCKET;
      exit 0;
      "

  mysql:
    container_name: ${MYSQL_HOST}
    image: mysql:8
    restart: always
    command: --authentication_policy=mysql_native_password --collation-server=utf8mb4_0900_ai_ci
    cap_add:
      - SYS_NICE
    env_file:
      - .env
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      - webnet

  redis:
    container_name: ${REDIS_HOST}
    image: "redis:7-alpine"
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - webnet

  mongo:
    image: mongo:4.4
    restart: unless-stopped
    container_name: ${MONGO_HOST}
    volumes:
      - ./mongo/data:/data/db
    ports:
      - ${MONGO_PORT}:27017


networks:
  webnet:
    driver: bridge
